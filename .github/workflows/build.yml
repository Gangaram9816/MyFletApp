name: Build & Deploy Flet App

on:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  build:
    name: Build for Windows
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set UTF-8 Encoding (Fix Unicode Issue)
        run: |
          chcp 65001
          $env:PYTHONIOENCODING="utf-8"
          $env:PYTHONUTF8=1
          [System.Console]::OutputEncoding = [System.Text.Encoding]::UTF8
        shell: pwsh

      - name: Install Flutter
        run: |
          git clone https://github.com/flutter/flutter.git --depth 1 C:\flutter
          echo "C:\flutter\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
          echo "C:\flutter\bin\cache\dart-sdk\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
          $env:Path += ";C:\flutter\bin;C:\flutter\bin\cache\dart-sdk\bin"
          [System.Environment]::SetEnvironmentVariable("Path", $env:Path, [System.EnvironmentVariableTarget]::Machine)
          C:\flutter\bin\flutter doctor
          C:\flutter\bin\flutter config --no-analytics
          C:\flutter\bin\flutter precache  # ✅ Ensures Flutter dependencies are installed
        shell: pwsh

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt
          pip install flet  # Ensure Flet CLI is installed

      - name: Build Windows Executable
        run: |
          hcp 65001  # ✅ Fix Unicode Issue
          $env:PYTHONIOENCODING="utf-8"
          $env:PYTHONUTF8=1
          [System.Console]::OutputEncoding = [System.Text.Encoding]::UTF8
          $env:Path += ";C:\flutter\bin;C:\flutter\bin\cache\dart-sdk\bin"  # ✅ Ensure Flutter is in PATH
          C:\flutter\bin\flutter doctor  # ✅ Verify Flutter is installed before building

          # ✅ Ensure the `build/` folder is empty before starting
          if (Test-Path build) { Remove-Item -Recurse -Force build }

          # ✅ Build the app specifying the correct module name (inside `src/`)
          flet build windows --module-name src.main --verbose

          # ✅ Ensure the built files are inside `build/`
          mkdir build
          mv dist/* build/
          # chcp 65001  # ✅ Fix Unicode Issue
          # $env:PYTHONIOENCODING="utf-8"
          # $env:PYTHONUTF8=1
          # [System.Console]::OutputEncoding = [System.Text.Encoding]::UTF8
          # $env:Path += ";C:\flutter\bin;C:\flutter\bin\cache\dart-sdk\bin"  # ✅ Ensure Flutter is in PATH
          # C:\flutter\bin\flutter doctor  # ✅ Verify Flutter is installed before building
          
          # # ✅ Ensure the `build/` folder is empty before starting
          # if (Test-Path build) { Remove-Item -Recurse -Force build }

          # # Build the app
          # flet build windows --module-name src.main --verbose
          
          # # Move the output to the build folder
          # mkdir -p build
          # mv dist/* build/

          # # ✅ Ensure output directory exists
          # #mkdir build/windows -Force
          # #mkdir ..\build -Force

          # # ✅ Move into the 'src' folder before running Flet build
          # #cd src
          # #echo "Current Directory: $(Get-Location)"  # ✅ Debugging log
          # #echo "Listing files before build:"
          # #Get-ChildItem

          # #flet build windows --module-name main --output ../build/ --verbose  # ✅ Adjusted module-name
          # #cd ..
          # #echo "Listing build folder after build content:"
          # #Get-ChildItem
        shell: pwsh

      - name: List build directory contents
        run: ls -R build
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Flet_App_Windows
          path: build/**
          retention-days: 7

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: Flet_App_Windows
          path: build/

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          files: build/**.exe
          token: ${{ secrets.GITHUB_TOKEN }}
