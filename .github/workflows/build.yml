name: Build & Deploy Flet App

on:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  build:
    name: Build for Windows
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set UTF-8 Encoding (Fix Unicode Issue)
        run: |
          chcp 65001
          $env:PYTHONIOENCODING="utf-8"
          $env:PYTHONUTF8=1
          [System.Console]::OutputEncoding = [System.Text.Encoding]::UTF8
        shell: pwsh

      - name: Install Flutter
        run: |
          git clone https://github.com/flutter/flutter.git --depth 1 C:\flutter
          echo "C:\flutter\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
          echo "C:\flutter\bin\cache\dart-sdk\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
          $env:Path += ";C:\flutter\bin;C:\flutter\bin\cache\dart-sdk\bin"
          C:\flutter\bin\flutter doctor
          C:\flutter\bin\flutter config --no-analytics
          C:\flutter\bin\flutter precache
        shell: pwsh

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt
          pip install flet
        shell: pwsh

      - name: Build Windows Executable
        run: |
          chcp 65001
          $env:PYTHONIOENCODING="utf-8"
          $env:PYTHONUTF8=1
          [System.Console]::OutputEncoding = [System.Text.Encoding]::UTF8
          $env:Path += ";C:\flutter\bin;C:\flutter\bin\cache\dart-sdk\bin"

          # Run Flet build
          cd src
          flet build windows --module-name main --output ../build/ --verbose
        shell: pwsh

      - name: Verify Build Output
        run: |
          echo "Checking contents of build directory..."
          ls build/
        shell: pwsh

      - name: Install Inno Setup
        run: choco install innosetup -y
        shell: pwsh

      - name: Generate Windows Installer
        run: |
          echo "Checking contents of build directory before running ISCC:"
          ls build/

          if (-Not (Test-Path "build/src.exe")) { 
            Write-Error "Error: src.exe not found in build/"; exit 1 
          }

          # Run Inno Setup to generate installer
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" installer.iss
        shell: pwsh

      - name: Upload Windows Installer as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows_Installer
          path: build/MyFletApp_Installer.exe
